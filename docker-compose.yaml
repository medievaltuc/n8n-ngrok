
services:
  n8n:
    container_name: n8n
    image: docker.n8n.io/n8nio/n8n
    environment:
      - WEBHOOK_URL=${URL}
      - TZ=${TIMEZONE}
      - GENERIC_TIMEZONE=${TIMEZONE}
    networks:
      - n8n-network
    volumes:
      - n8n_data:/home/node/.n8n

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    networks:
      - n8n-network
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml

  postgres:
    container_name: postgres
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=n8nbase
    ports:
      - "5432:5432"
    networks:
      - n8n-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@jugoscitric.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - n8n-network
    depends_on:
      - postgres 
      
  fastapi:
    container_name: fastapi
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    networks:
      - n8n-network
    depends_on:
      - postgres
  
  wppconnect:
    image: wppconnectteam/wppconnect-server:latest
    container_name: wppconnect
    ports:
      - "21465:21465" # Puerto del servidor
    environment:
      - PORT=21465
      - START_ALL_SESSIONS=false
      - USE_HEROKU=false
      - TOKEN_SECRET=mi_token_secreto
      - JWT_SECRET=mi_jwt_secreto
      - API_AUTO_INITIATE=false
    volumes:
      - ./wppconnect-data:/app/data
    

volumes:
  n8n_data:
  postgres_data:
  pgadmin_data:

networks:
  n8n-network:
    driver: bridge
